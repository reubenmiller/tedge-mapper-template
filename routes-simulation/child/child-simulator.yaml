# yaml-language-server: $schema=../../spec/schema.json
---
routes:

#---------------------------------#
# c8y-firmware-plugin-simulator
#---------------------------------#

- name: simulation - firmware plugin - send to a device
  topics:
    - tedge/commands/firmware_update/start
    - tedge/+/commands/firmware_update/start
  template:
    type: jsonnet
    value: |
      local prefix = std.split(topic, "/commands/")[0];
      {
        topic: "%s/commands/req/firmware_update" % prefix,
        message: message,
      }

- name: simulation - firmware plugin - set to done (so it can publish)
  skip: true
  topics:
    - tedge/commands/firmware_update/done/successful
    - tedge/+/commands/firmware_update/done/successful
  template:
    type: jsonnet
    value: |
      local prefix = std.split(topic, "/commands/")[0];
      {
        topic: "%s/commands/firmware_update/done" % prefix,
        message: message,
      }

#---------------------------------#
# child device firmware simulator
#---------------------------------#
- name: simulation - device - set to executing
  topics:
    - tedge/commands/req/firmware_update
    - tedge/+/commands/req/firmware_update
  template:
    type: jsonnet
    value: |
      local prefix = std.split(topic, "/commands/")[0];
      {
        topic: "%s/commands/res/firmware_update" % prefix,
        message: message + {
          status: "executing",
        },
        # skip: std.get(message, 'status', '')
      }

- name: simulation - device - set to successful
  description: Only trigger on executing messages (as it is a self referencing message)
  topics:
    - tedge/commands/res/firmware_update
    - tedge/+/commands/res/firmware_update
  template:
    type: jsonnet
    value: |
      local prefix = std.split(topic, "/commands/")[0];
      local incomingStatus = std.get(message, 'status', '');
      {
        topic: "%s/commands/firmware_update/done/successful" % prefix,
        message: message + {
          status: "successful",
        },
        skip: incomingStatus != "executing",
      }

#---------------------------------#
# main device software simulator
#---------------------------------#
- name: simulation - software - set to executing
  topics:
    - tedge/commands/req/software/update
    - tedge/+/commands/req/software/update
  template:
    type: jsonnet
    value: |
      local prefix = std.split(topic, "/commands/")[0];
      local incomingStatus = std.get(message, 'status', '');
      {
        topic: "%s/commands/res/software/update" % prefix,
        message: {
          id: message.id,
          status: 'successful',
          currentSoftwareList: [
            {
              type: "apt",
              modules: [
                {
                  name: "curl",
                  version: "7.74.0-1.3+deb11u7"
                },
                {
                  name: "package2",
                  version: "2.0.0"
                }
              ]
            },
            {
              type: "dummy",
              modules: []
            }
          ]
        },
        context: false,
      }
