# yaml-language-server: $schema=../spec/schema.json
---
routes:
- name: c8y-inventory-update
  topics:
    - tedge/inventory/update
    - tedge/+/inventory/update
  description: |
    Support inventory updates via a new tedge interface

    Updates are sent to Cumulocity IoT via the JSON via MQTT interface.

  template:
    type: jsonnet
    value: |
      local tedge = import 'tedge.libsonnet';
      local prefix = std.split(topic, '/inventory/update')[0];
      local serial = tedge.getSerial(prefix, meta.device_id);
      assert std.isObject(message) : 'Invalid message. Only objects are accepted';
      
      {
        topic: 'c8y/inventory/managedObjects/update/%s' % serial,
        message: message + {
          id:: null,
          creationTime:: null,
          lastUpdated:: null,
        },
        skip: std.length($.message) == 0,
      }

- name: c8y-inventory-update-partial
  topics:
    - tedge/inventory/update/+
    - tedge/+/inventory/update/+
  description: |
    Support inventory updates via a new tedge interface

    Updates are sent to Cumulocity IoT via the JSON via MQTT interface.

  template:
    type: jsonnet
    value: |
      local tedge = import 'tedge.libsonnet';
      local prefix = std.split(topic, '/inventory/update')[0];
      local serial = tedge.getSerial(prefix, meta.device_id);

      local fragment = std.splitLimitR(topic, "/", 1)[1];
      
      assert std.isObject(message) : 'Invalid message. Only objects are accepted';
      
      {
        topic: 'c8y/inventory/managedObjects/update/%s' % serial,
        context: false,
        message: {
          [fragment]: message,
        },
        skip: std.isEmpty(fragment),
      }

- name: c8y-inventory-delete-fragment
  topics:
    - tedge/inventory/delete/+
    - tedge/+/inventory/delete/+
  description: |
    Remove fragment from the device's managed object (main or child device)

  template:
    type: jsonnet
    value: |
      local tedge = import 'tedge.libsonnet';

      local prefix = std.split(topic, '/inventory/delete')[0];
      local serial = tedge.getSerial(prefix, meta.device_id);

      local outTopic = tedge.getSmartRestTopic(prefix, meta.device_id, 'c8y/s/us');
      local fragment = std.splitLimitR(topic, "/", 1)[1];
      
      {
        topic: outTopic,
        context: false,
        raw_message: '107,%s' % fragment,
      }
