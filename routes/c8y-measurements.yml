# yaml-language-server: $schema=../spec/schema.json
---
routes:
- name: c8y-measurements-bulk-text
  topics:
    - te/+/+/+/+/m2/+
  description: |
    Create measurements with multiple values via a text key/value interface

    Examples:
      # Multiple measurements provided in a nested hierarchy
      temperature.temperature,10.0,%
      item.value,10.0,%

  template:
    type: jsonnet
    value: |
      local tedge = import 'tedge.libsonnet';
      local prefix = std.split(topic, '/m2/')[0];
      local serial = tedge.getSerial(prefix, meta.device_id);
      local type = std.splitLimitR(topic, "/", 1)[1];

      local meta =
        {time: _.Now()}
        + {
            ['time']: std.splitLimit(line, ',', 1)[1]
            for line in std.split(message, '\n')
            if std.startsWith(line, 'time,')
          }
      ;

      local measurements = tedge.measurements.from_text(message);
      {
        topic: 'c8y/measurement/measurements/create',
        message: tedge.measurements.defaults(serial, type) + measurements + meta,
        context: false,
        skip: std.length($.message) == 0,
      }
