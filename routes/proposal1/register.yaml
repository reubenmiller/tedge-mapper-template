# yaml-language-server: $schema=../../spec/schema.json
---
routes:
- name: c8y-register-child
  topics:
    - tedge/+/register/req/child
  description: |
    Register child device
  template:
    type: jsonnet
    value: |
      local tedge = import 'tedge.libsonnet';

      local name = message['id-prefix'];
      local externalID = tedge.lookupID(name);
      local outTopic =
        if std.get(message, 'parent', '') != '' then
          'c8y/s/us/%s' % tedge.lookupID(message.parent)
        else
          'c8y/s/us'
      ;

      {
        updates: [
          {
            topic: outTopic,
            message: '101,"%s","%s","%s"' % [
              externalID,
              std.get(message, 'name', name),
              std.get(message, 'type', 'c8y_MQTTChildDevice'),
            ],
          },
        ],
        context: false,
        topic: std.strReplace(topic, '/req/', '/res/'),
        message: {
          id: name,
          status: 'success',
        },
      }
