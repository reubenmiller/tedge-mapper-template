# yaml-language-server: $schema=../spec/schema.json
---
disable: true
routes:
- name: simple measurements
  topic: tedge/measurements
  skip: true
  template:
    type: jsonnet
    value: |
      local topic = '';
      local message = '';
      local meta = {};

      ###

      {
          message: {
            c8y_Command: message,
          },
          topic: topic + "/",
          skip: if std.endsWith(topic, "/measurements") then true else false,
      }

- name: complex measurements
  topic: tedge/measurements/+
  template:
    type: jsonnet
    value: |
      {
          message: {
            c8y_Command: message,
            topic: topic,
            time: _.Now()
          },``
          skip: ctx.lvl > 2,
          topic: std.rstripChars(topic + "/", "/"),
      }

- name: Trigger event from measurement
  topic: tedge/measurements
  template:
    type: jsonnet
    value: |
      {
          message: {
            c8y_Command: message,
            topic: topic,
            time: _.Now()
          },
          skip: true,
          topic: std.rstripChars(topic + "/", "/"),
      }

- name: Modify urls
  topic: tedge/operations/req/config_update
  template:
    type: jsonnet
    value: |
      # NB: Recurse the main object, looking for strings to replace
      local recurseReplace(any, from, to) = (
        {
          object: function(x) { [k]: recurseReplace(x[k], from, to) for k in std.objectFields(x) },
          array: function(x) [recurseReplace(e, from, to) for e in x],
          string: function(x) _.ReplacePattern(x, from, to),
          # string: function(x) std.strReplace(x, from, to),
          number: function(x) x,
          boolean: function(x) x,
          'function': function(x) x,
          'null': function(x) x,
        }[std.type(any)](any)
      );

      {
          message: recurseReplace(message, 'https?://\\bt\\d+\\.cumulocity.com', meta.env.C8Y_BASEURL),
          end: true,
          topic: topic,
      }
