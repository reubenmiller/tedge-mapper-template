# yaml-language-server: $schema=https://raw.githubusercontent.com/reubenmiller/commander/feat/handle-nested-files/schema.json

config:
  env:
    C8Y_SETTINGS_DEFAULTS_CACHE: true

tests:
  #
  # Nested child devices
  #
  register nested child device without a pre-registered parent with slashes:
    command: |
      go run main.go routes check --dir ./routes-proposal3 -t 'te/device/nested_child10' -m '{
        "@type": "child-device",
        "@parent": "te/device/nested_gateway",
        "displayName": "nested_child10"
      }' -s --device-id sim_tedge01
    stdout:
      exactly: |
        Route: c8y-registration (te/+/+, te/+/+/+/+)

        Input Message
          topic:    te/device/nested_child10

        Output Message (mqtt)
          topic:    c8y/s/us/sim_tedge01:device:nested_gateway
        101,"sim_tedge01:device:nested_child10","nested_child10","c8y_MQTTChildDevice"
  
  register nested child device without a pre-registered parent id with colons:
    command: |
      go run main.go routes check --dir ./routes-proposal3 -t 'te/device/nested_child10' -m '{
        "@type": "child-device",
        "@parent": "te:device:nested_gateway",
        "displayName": "nested_child10"
      }' -s --device-id sim_tedge01
    stdout:
      exactly: |
        Route: c8y-registration (te/+/+, te/+/+/+/+)

        Input Message
          topic:    te/device/nested_child10

        Output Message (mqtt)
          topic:    c8y/s/us/sim_tedge01:device:nested_gateway
        101,"sim_tedge01:device:nested_child10","nested_child10","c8y_MQTTChildDevice"

  register nested child device with a pre-registered parent which has an explicit id:
    command: |
      go run main.go routes check --entityfile ./tests/proposal3/entities.json --dir ./routes-proposal3 -t 'te/device/sensor01' -m '{
        "@type": "child-device",
        "@parent": "te/device/gateway01",
        "type": "matter",
        "displayName": "sensor01"
      }' -s --device-id sim_tedge01
    stdout:
      exactly: |
        Route: c8y-registration (te/+/+, te/+/+/+/+)

        Input Message
          topic:    te/device/sensor01

        Output Message (mqtt)
          topic:    c8y/s/us/te:device:gateway01
        101,"sim_tedge01:device:sensor01","sensor01","matter"

  #
  # Child device
  #
  register a child device with an explicit id:
    command: |
      go run main.go routes check --dir ./routes-proposal3 -t 'te/device/sensor01' -m '{
        "@type": "child-device",
        "type": "matter",
        "displayName": "Custom sensor01"
      }' -s --device-id sim_tedge01
    stdout:
      exactly: |
        Route: c8y-registration (te/+/+, te/+/+/+/+)

        Input Message
          topic:    te/device/sensor01

        Output Message (mqtt)
          topic:    c8y/s/us/sim_tedge01
        101,"sim_tedge01:device:sensor01","Custom sensor01","matter"

  #
  # Child device
  #
  register a service of a child device:
    command: |
      go run main.go routes check --dir ./routes-proposal3 -t 'te/component/sensor01' -m '{
        "@type": "service",
        "type": "matter",
        "displayName": "Custom sensor01"
      }' -s --device-id sim_tedge01
      
    stdout:
      exactly: |
        Route: c8y-registration (te/+/+, te/+/+/+/+)

        Input Message
          topic:    te/component/sensor01

        Output Message (mqtt)
          topic:    c8y/s/us/sim_tedge01
        102,"sim_tedge01:component:sensor01","matter","Custom sensor01","up"
