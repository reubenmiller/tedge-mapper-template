# yaml-language-server: $schema=https://raw.githubusercontent.com/reubenmiller/commander/feat/handle-nested-files/schema.json

config:
  env:
    C8Y_SETTINGS_DEFAULTS_CACHE: true

tests:
  publish alarms for main device:
    command: |
      go run main.go routes check --dir ./routes-proposal3 -t 'te/device/main///a/flow_lo' -m '{"text":"Low flow", "severity": "WARNING", "time":"2023-05-26T20:10:54.494Z"}' -s --device-id sim_tedge01
    stdout:
      exactly: |
        Route: c8y-alarms (te/+/+/+/+/a/+)

        Input Message
          topic:    te/device/main///a/flow_lo

        Output Message (mqtt)
          topic:    c8y/alarm/alarms/create

            {
              "externalSource": {
                "externalId": "sim_tedge01",
                "type": "c8y_Serial"
              },
              "severity": "WARNING",
              "text": "Low flow",
              "time": "2023-05-26T20:10:54.494Z",
              "type": "flow_lo"
            }

  publish alarms for child device:
    command: |
      go run main.go routes check --dir ./routes-proposal3 -t 'te/device/child01///a/flow_lo' -m '{"text":"Low flow", "severity": "WARNING", "time":"2023-05-26T20:10:54.494Z"}' -s --device-id sim_tedge01
    stdout:
      exactly: |
        Route: c8y-alarms (te/+/+/+/+/a/+)

        Input Message
          topic:    te/device/child01///a/flow_lo

        Output Message (mqtt)
          topic:    c8y/alarm/alarms/create

            {
              "externalSource": {
                "externalId": "sim_tedge01:device:child01",
                "type": "c8y_Serial"
              },
              "severity": "WARNING",
              "text": "Low flow",
              "time": "2023-05-26T20:10:54.494Z",
              "type": "flow_lo"
            }

  publish alarms service of main device:
    command: |
      go run main.go routes check --dir ./routes-proposal3 -t 'te/device/main/service/nodered/a/flow_lo' -m '{"text":"Low flow", "severity": "WARNING", "time":"2023-05-26T20:10:54.494Z"}' -s --device-id sim_tedge01
    stdout:
      exactly: |
        Route: c8y-alarms (te/+/+/+/+/a/+)

        Input Message
          topic:    te/device/main/service/nodered/a/flow_lo

        Output Message (mqtt)
          topic:    c8y/alarm/alarms/create

            {
              "externalSource": {
                "externalId": "sim_tedge01:device:main:service:nodered",
                "type": "c8y_Serial"
              },
              "severity": "WARNING",
              "text": "Low flow",
              "time": "2023-05-26T20:10:54.494Z",
              "type": "flow_lo"
            }

  publish alarms service of child device:
    command: |
      go run main.go routes check --dir ./routes-proposal3 -t 'te/device/child01/service/nodered/a/flow_lo' -m '{"text":"Low flow", "severity": "WARNING", "time":"2023-05-26T20:10:54.494Z"}' -s --device-id sim_tedge01
    stdout:
      exactly: |
        Route: c8y-alarms (te/+/+/+/+/a/+)

        Input Message
          topic:    te/device/child01/service/nodered/a/flow_lo

        Output Message (mqtt)
          topic:    c8y/alarm/alarms/create

            {
              "externalSource": {
                "externalId": "sim_tedge01:device:child01:service:nodered",
                "type": "c8y_Serial"
              },
              "severity": "WARNING",
              "text": "Low flow",
              "time": "2023-05-26T20:10:54.494Z",
              "type": "flow_lo"
            }
