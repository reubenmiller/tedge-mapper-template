project_name: tedge-mapper-template

release:
  prerelease: auto
  draft: true
  name_template: "tedge-mapper-template {{.Version}}"

builds:
  - <<: &build_defaults
      binary: 'bin/{{ if index .Env "BINARY_INCLUDE_VERSION" }}{{ .ProjectName }}_{{ .RawVersion }}_{{ if eq .Os "darwin" }}macOS{{ else }}{{ .Os }}{{ end }}_{{ .Arch }}{{ else }}{{ .ProjectName }}{{ end }}'
      main: ./main.go
      flags:
        - -trimpath
      ldflags:
        - -s -w -X github.com/reubenmiller/tedge-mapper-template/cmd.buildVersion={{.Version}} -X github.com/reubenmiller/tedge-mapper-template/cmd.buildBranch={{.Branch}}

    id: macOS
    goos: [darwin]
    goarch: [amd64, arm64]

  - <<: *build_defaults
    id: linux
    goos: [linux]
    goarch: ["386", arm, amd64, arm64]
    goarm:
    - "5"
    - "6"
    - "7"
    env:
      - CGO_ENABLED=0

  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: ["386", amd64, arm64]

archives:
  - id: nix
    builds: [linux]
    <<: &archive_defaults
      name_template: '{{ .ProjectName }}_{{ .Version }}_{{- if eq .Os "darwin" }}macOS{{- else }}{{ .Os }}{{ end }}_{{ .Arch }}{{- if ne .Arm "" }}_v{{ .Arm }}{{ end }}'
      rlcp: true
    wrap_in_directory: "true"
    format: tar.gz
    files:
      - LICENSE
      # - defaults/*.yaml

  - id: homebrew
    builds: [macOS]
    <<: *archive_defaults
    wrap_in_directory: "true"
    format: tar.gz
    files:
      - LICENSE
      # - defaults/*.yaml

  - id: windows
    builds: [windows]
    <<: *archive_defaults
    wrap_in_directory: "false"
    format: zip
    files:
      - LICENSE
      # - defaults/*.yaml
  
  - id: plainBinaries
    builds: [macOS, linux, windows]
    # Don't include the binary version in the filename so it is easier to download the latest
    <<: &archive_defaults
      name_template: '{{ .ProjectName }}_{{- if eq .Os "darwin" }}macOS{{- else }}{{ .Os }}{{ end }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}'
    format: binary

nfpms:
  - 
    package_name: tedge-mapper-template
    license: MIT
    maintainer: Reuben Miller <thinedge@thin-edge.io>
    homepage: https://github.com/reubenmiller/tedge-mapper-template
    bindir: /usr
    description: thin-edge.io configurable mapper
    section: utils
    priority: optional
    file_name_template: "{{ .PackageName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}"
    formats:
      - deb
      - rpm
      - apk
    # Packages your package suggests installing.
    suggests:
      - jq
      - git

    scripts:
      preremove: ./packaging/scripts/pre-remove
      postinstall: ./packaging/scripts/post-install
      postremove: ./packaging/scripts/post-remove

    contents:
      # Services
      - src: ./packaging/services/systemd/service.systemd
        dst: /usr/lib/systemd/system/tedge-mapper-template.service
        file_info:
          mode: 0644
          owner: tedge
          group: tedge

      - src: ./packaging/services/init.d/service.initd
        dst: /etc/init.d/tedge-mapper-template
        file_info:
          mode: 0644
          owner: tedge
          group: tedge

      # Completions
      - src: ./output/completions.bash
        dst: /etc/bash_completion.d/tedge-mapper-template
      
      - src: ./output/completions.zsh
        dst: /usr/local/share/zsh/site-functions/_tedge-mapper-template
      
      - src: ./output/completions.fish
        dst: /usr/share/fish/vendor_completions.d/tedge-mapper-template.fish
      
      # Addons
      - src: routes/*.yaml
        dst: /etc/tedge-mapper-template/routes/
        type: config|noreplace

      - src: routes-simulation/child/*.yaml
        dst: /etc/tedge-mapper-template/routes-simulation/child/
        type: config|noreplace

      - src: lib/*.libsonnet
        dst: /etc/tedge-mapper-template/lib/
        type: config|noreplace

# brews:
#   -
#     # Package name
#     name: tedge-mapper-template

#     # IDs of the archives to use.
#     ids:
#       - homebrew
#       - nix

#     # GOARM to specify which 32-bit arm version to use if there are multiple versions
#     # from the build section. Brew formulas support atm only one 32-bit version.
#     # Default is 6 for all artifacts or each id if there a multiple versions.
#     goarm: "6"

#     # GitHub/GitLab repository to push the formula to
#     tap:
#       owner: reubenmiller
#       name: homebrew-tedge-mapper-template
#       token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"

#     # Template for the url which is determined by the given Token
#     url_template: "https://github.com/reubenmiller/tedge-mapper-template/releases/download/{{ .Tag }}/{{ .ArtifactName }}"

#     # Git author used to commit to the repository.
#     commit_author:
#       name: goreleaserbot
#       email: thinedge@thin-edge.io

#     # Folder inside the repository to put the formula.
#     folder: Formula

#     homepage: "https://github.com/reubenmiller/tedge-mapper-template"
#     description: "experimental thin-edge.io mapper based on configurable templates"
#     license: "MIT"

#     # So you can `brew test` your formula.
#     test: |
#       system "#{bin}/tedge-mapper-template --version"

#     install: |
#       bin.install "bin/tedge-mapper-template"
#       # man1.install Dir["share/man/man1/*"]
      
#       config_dir = etc/"tedge-mapper-template"

#       # Add completions
#       output = Utils.safe_popen_read({ "SHELL" => "bash" }, "#{bin}/tedge-mapper-template", "completion", "bash")
#       (bash_completion/"tedge-mapper-template").write output
#       output = Utils.safe_popen_read({ "SHELL" => "zsh" }, "#{bin}/tedge-mapper-template", "completion", "zsh")
#       (zsh_completion/"_tedge-mapper-template").write output
#       output = Utils.safe_popen_read({ "SHELL" => "fish" }, "#{bin}/tedge-mapper-template", "completion", "fish")
#       (fish_completion/"tedge-mapper-template.fish").write output


dockers:
  - 
    image_templates:
      - "ghcr.io/reubenmiller/{{.ProjectName}}:{{ .Version }}-amd64"
      - "ghcr.io/reubenmiller/{{.ProjectName}}:latest-amd64"
    goos: linux
    goarch: amd64
    goamd64: 'v1'
    dockerfile: images/Dockerfile
    use: buildx
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--platform=linux/amd64"

  - 
    image_templates:
      - "ghcr.io/reubenmiller/{{.ProjectName}}:{{ .Version }}-arm64v8"
      - "ghcr.io/reubenmiller/{{.ProjectName}}:latest-arm64v8"
    goos: linux
    goarch: arm64
    dockerfile: images/Dockerfile
    use: buildx
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--platform=linux/arm64/v8"

  - 
    image_templates:
      - "ghcr.io/reubenmiller/{{.ProjectName}}:{{ .Version }}-armv7"
      - "ghcr.io/reubenmiller/{{.ProjectName}}:latest-armv7"
    goos: linux
    goarch: arm
    goarm: '7'
    dockerfile: images/Dockerfile
    use: buildx
    build_flag_templates:
    - "--pull"
    - "--label=org.opencontainers.image.created={{.Date}}"
    - "--label=org.opencontainers.image.title={{.ProjectName}}"
    - "--label=org.opencontainers.image.revision={{.FullCommit}}"
    - "--label=org.opencontainers.image.version={{.Version}}"
    - "--platform=linux/arm/7"

docker_manifests:
- name_template: "ghcr.io/reubenmiller/{{.ProjectName}}:{{ .Version }}"
  image_templates:
  - "ghcr.io/reubenmiller/{{.ProjectName}}:{{ .Version }}-amd64"
  - "ghcr.io/reubenmiller/{{.ProjectName}}:{{ .Version }}-arm64v8"
  - "ghcr.io/reubenmiller/{{.ProjectName}}:{{ .Version }}-armv7"

- name_template: "ghcr.io/reubenmiller/{{.ProjectName}}:latest"
  image_templates:
  - "ghcr.io/reubenmiller/{{.ProjectName}}:latest-amd64"
  - "ghcr.io/reubenmiller/{{.ProjectName}}:latest-arm64v8"
  - "ghcr.io/reubenmiller/{{.ProjectName}}:latest-armv7"
